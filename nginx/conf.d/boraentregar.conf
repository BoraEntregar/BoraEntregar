# Upstream para backend main
upstream backend_main {
    server backend-main:5001;
}

# Upstream para backend dev
upstream backend_dev {
    server backend-dev:5001;
}

# Redirecionar HTTP para HTTPS (comentado por padrão)
# server {
#     listen 80;
#     server_name api.seu-dominio.com api-dev.seu-dominio.com;
#     return 301 https://$server_name$request_uri;
# }

# Backend Main (Produção)
server {
    listen 80;
    server_name api.seu-dominio.com;

    # Para usar HTTPS, descomente as linhas abaixo e adicione seus certificados SSL
    # listen 443 ssl http2;
    # ssl_certificate /etc/nginx/ssl/fullchain.pem;
    # ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;
    # ssl_prefer_server_ciphers on;

    # Logs
    access_log /var/log/nginx/backend-main-access.log;
    error_log /var/log/nginx/backend-main-error.log;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS headers (se necessário)
    add_header 'Access-Control-Allow-Origin' 'https://seu-dominio.vercel.app' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    location / {
        proxy_pass http://backend_main;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://backend_main/health;
        access_log off;
    }
}

# Backend Dev (Desenvolvimento)
server {
    listen 80;
    server_name api-dev.seu-dominio.com;

    # Para usar HTTPS, descomente as linhas abaixo
    # listen 443 ssl http2;
    # ssl_certificate /etc/nginx/ssl/dev-fullchain.pem;
    # ssl_certificate_key /etc/nginx/ssl/dev-privkey.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;
    # ssl_prefer_server_ciphers on;

    # Logs
    access_log /var/log/nginx/backend-dev-access.log;
    error_log /var/log/nginx/backend-dev-error.log;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS headers
    add_header 'Access-Control-Allow-Origin' 'https://seu-dominio-dev.vercel.app' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    location / {
        proxy_pass http://backend_dev;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://backend_dev/health;
        access_log off;
    }
}
