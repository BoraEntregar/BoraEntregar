services:
  # Backend Production (main branch)
  backend-main:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boraentregar-backend-main
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
      - MONGODB_URI=${MONGODB_URI_MAIN}
      - FRONTEND_URLS=${FRONTEND_URL_MAIN}
      - AUTH0_BASE_URL=${AUTH0_BASE_URL_MAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID_MAIN}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET_MAIN}
      - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL_MAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE_MAIN}
    networks:
      - boraentregar-network-main
    volumes:
      - backend-uploads-main:/app/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Development (dev branch)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boraentregar-backend-dev
    restart: unless-stopped
    ports:
      - "5002:5001"
    environment:
      - NODE_ENV=development
      - PORT=5001
      - MONGODB_URI=${MONGODB_URI_DEV}
      - FRONTEND_URLS=${FRONTEND_URL_DEV}
      - AUTH0_BASE_URL=${AUTH0_BASE_URL_DEV}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID_DEV}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET_DEV}
      - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL_DEV}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE_DEV}
    networks:
      - boraentregar-network-dev
    volumes:
      - backend-uploads-dev:/app/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (opcional, mas recomendado)
  nginx:
    image: nginx:alpine
    container_name: boraentregar-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - boraentregar-network-main
      - boraentregar-network-dev
    depends_on:
      - backend-main
      - backend-dev

networks:
  boraentregar-network-main:
    driver: bridge
  boraentregar-network-dev:
    driver: bridge

volumes:
  backend-uploads-main:
    driver: local
  backend-uploads-dev:
    driver: local
